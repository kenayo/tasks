# Римский А.А. swordscream@yandex.ru


class Пицца:
    """Класс Пицца содержит общие атрибуты для пиццы.

    Дочерние классы будут их конкретизировать.
    """

    def __init__(self):
        """Конструктор класса.

        Инициализирует атрибуты пиццы (значения по умолчанию).
        """
        self.название = "Заготовка"
        self.тесто = "тонкое"  # тонкое или пышное
        self.соус = "кетчуп"   # или другой
        self.начинка = []      # список начинок (по умолчанию - нет)

        self.цена = 0

    def __str__(self):
        """Вернуть информацию о пицце: название, тесто, соус, начинка.

        Формат вывода:

        Пицца: Пепперони | Цена: 350.00 р.
        Тесто: тонкое Соус: томатный
        Начинка: пепперони, сыр моцарелла
        """
        return 'Пицца: {} | Цена: {} р.\n   Тесто: {} Соус: {}\n   Начинка: \
               {}'.format(self.название, '{0:.2f}'.format(self.цена),
                          self.тесто, self.соус, ', '.join(self.начинка))

    def подготовить(self):
        """Сообщить о процессе подготовки.

        Формат вывода:

        Начинаю готовить пиццу Пепперони
          - замешиваю тонкое тесто...
          - добавляю соус: томатный...
          - и, конечно: пепперони, сыр моцарелла...
        """
        строка = 'Начинаю готовить пиццу {}\n'.format(self.название)
        строка += '  - замешиваю {} тесто...\n'.format(self.тесто)
        строка += '  - добавляю соус: {}...\n'.format(self.соус)
        строка += '  - и, конечно: {}'.format(', '.join(self.начинка))
        return строка

    def испечь(self):
        """Сообщить о процессе запекания пиццы.

        Формат вывода: произвольное сообщение.
        """
        return 'Выпекаю пиццу... Готово!'

    def нарезать(self):
        """Сообщить о процессе нарезки.

        Формат вывода: произвольное сообщение.
        """
        return 'Нарезаю на аппетитные кусочки...'

    def упаковать(self):
        """Сообщить о процессе упаковки.

        Формат вывода: произвольное сообщение.
        """
        return 'Упаковываю в фирменную упаковку и готово!'


class ПиццаПепперони(Пицца):
    """Класс ПиццаПепперони дополняет класс Пицца."""

    def __init__(self):
        super().__init__()
        self.название = 'Пепперони'
        self.тесто = 'тонкое'
        self.соус = 'томатный'
        self.начинка = ['пепперони', 'сыр моцарелла']
        self.цена = 350


class ПиццаБарбекю(Пицца):
    """Класс ПиццаБарбекю дополняет класс Пицца."""

    def __init__(self):
        self.название = 'Барбекю'
        self.тесто = 'тонкое'
        self.соус = 'барбекю'
        self.начинка = ['бекон', 'ветчина', 'зелень', 'сыр моцарелла']
        self.цена = 450


class ПиццаДарыМоря(Пицца):
    """Класс ПиццаДарыМоря дополняет класс Пицца."""

    def __init__(self):
        self.название = 'Дары моря'
        self.тесто = 'пышное'
        self.соус = 'тар-тар'
        self.начинка = ['кальмары', 'креветки', 'мидии', 'сыр моцарелла']
        self.цена = 550
